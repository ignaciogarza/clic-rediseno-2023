<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iscreammedia.clic.front.repository.MessageRepository">

	<insert id="insertMessage" parameterType="com.iscreammedia.clic.front.domain.Message">
		INSERT INTO T_MESSAGE (MESSAGE_GROUP_ID, MESSAGE_CONTENTS, TRANS_DATE, CREATOR)
		VALUES(
			#{messageGroupId}
			,#{messageContents}
			,#{transDate}
			,#{creator}
		)
		<selectKey resultType="int" keyProperty="messageId" order="AFTER">
			SELECT @@IDENTITY
		</selectKey>
	</insert>

	<insert id="insertMessageGroup" parameterType="com.iscreammedia.clic.front.domain.MessageFriend">
		/* message.insertMessageGroup : 메시지 그룹 생성 */
		INSERT INTO T_MESSAGE_GROUP (IS_DEL, CREATED_DATE)
		VALUES(
			'N'
			,GETDATE()
		)
		<selectKey resultType="int" keyProperty="messageGroupId" order="AFTER">
			SELECT @@IDENTITY
		</selectKey>
	</insert>

	<insert id="insertMessageJoinUser" parameterType="com.iscreammedia.clic.front.domain.MessageFriend">
		/* message.insertMessageGroup : 메시지 참여 회원 등록 */
		INSERT INTO T_MESSAGE_JOIN_USER (MESSAGE_GROUP_ID, FRIEND_ID, USER_ID, CONFIRMATION_DATE, IS_DEL)
		VALUES(
			#{messageGroupId}
			,#{friendId}
			,#{userId}
			,GETDATE()
			,'N'
		)
		<selectKey resultType="int" keyProperty="messageGroupId" order="AFTER">
			SELECT @@IDENTITY
		</selectKey>
	</insert>

	<update id="updateMessageConfirmation" parameterType="map">
		/* message.updateMessageConfirmation : 메세지 확인 */
		UPDATE
			T_MESSAGE_JOIN_USER
		SET
			CONFIRMATION_MESSAGE_ID = #{messageId}
			,CONFIRMATION_DATE = GETDATE()
		WHERE
			MESSAGE_GROUP_ID = #{messageGroupId}
		AND USER_ID = #{userId}
	</update>

	<update id="updateMessageConfirmationAll" parameterType="map">
		/* message.updateMessageConfirmationAll : 메세지 전체 확인 */
		UPDATE
			T_MESSAGE_JOIN_USER MJU
		SET
			CONFIRMATION_MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM T_MESSAGE M WHERE M.MESSAGE_GROUP_ID = MJU.MESSAGE_GROUP_ID)
			,CONFIRMATION_DATE = GETDATE()
		WHERE
			MESSAGE_GROUP_ID = #{messageGroupId}
		AND USER_ID = #{userId}
	</update>

	<select id="getMessageGroupId" parameterType="map" resultType="int">
		/* message.getMessageGroupId : 메시지 그룹 아이디 조회 */
		SELECT
			MG.MESSAGE_GROUP_ID
		FROM
			T_MESSAGE_GROUP MG
		JOIN
			T_MESSAGE_JOIN_USER MJU
				ON  MJU.MESSAGE_GROUP_ID = MG.MESSAGE_GROUP_ID
				AND MJU.FRIEND_ID = #{friendId}
				AND MJU.USER_ID = #{userId}
		WHERE
			MG.IS_DEL = 'N'
		AND MJU.IS_DEL = 'N'
	</select>

	<select id="getFriendCount" parameterType="map" resultType="int">
		/* message.getFriendCount : 친구 카운트 조회 */
		SELECT
			COUNT(*)
		<include refid="fromFriend"/>
		<include refid="whereFriend"/>
	</select>

	<select id="getFriendList" parameterType="map" resultType="com.iscreammedia.clic.front.domain.MessageFriend">
		/* message.getFriendList : 친구 목록 조회 */
		SELECT
			MG.MESSAGE_GROUP_ID
			,U.USER_ID
			,U.COUNTRY_CODE
			,U.NAME
			,U.FIRSTNAME
			,U.NICKNAME
			,U.USER_IMAGE_PATH
			,J.JOB_NAME_${language.code} AS JOB_NAME
			,M.TRANS_DATE
			,M.MESSAGE_COUNT
			,M.LAST_MESSAGE_ID = MJU.CONFIRMATION_MESSAGE_ID AS IS_CONFIRMATION
		<include refid="fromFriend"/>
		<include refid="whereFriend"/>
		ORDER BY M.LAST_MESSAGE_ID DESC, U.NAME ASC, U.FIRSTNAME ASC
		OFFSET ${offset} ROW
		FETCH NEXT ${limit} ROW ONLY
	</select>

	<sql id="fromFriend">
		FROM
			T_USER U
		JOIN
			T_FRIEND F
				ON F.FRIEND_ID = U.USER_ID
				AND F.USER_ID = #{userId}
				AND F.FRIEND_STATUS_CODE = '1103'
		LEFT JOIN
			T_JOB_TABLE J
				ON J.JOB_ID = U.JOB_ID
		LEFT JOIN
			T_MESSAGE_JOIN_USER MJU
				ON  MJU.FRIEND_ID = F.FRIEND_ID
				AND MJU.USER_ID = F.USER_ID
				AND MJU.IS_DEL = 'N'
		LEFT JOIN
			T_MESSAGE_GROUP MG
				ON  MG.MESSAGE_GROUP_ID = MJU.MESSAGE_GROUP_ID
				AND MG.IS_DEL = 'N'
		LEFT JOIN (
			SELECT
				MESSAGE_GROUP_ID
				,ISNULL(MAX(MESSAGE_ID), 0) AS LAST_MESSAGE_ID
				,MAX(TRANS_DATE)            AS TRANS_DATE
				,COUNT(*)                   AS MESSAGE_COUNT
			FROM
				T_MESSAGE
			GROUP BY MESSAGE_GROUP_ID
		) M
				ON  M.MESSAGE_GROUP_ID = MG.MESSAGE_GROUP_ID
	</sql>

	<sql id="whereFriend">
		WHERE
			U.USER_ID != #{userId}
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKeyword)">
		AND (
			   U.NAME         LIKE CONCAT('%', #{searchKeyword}, '%')
			OR U.FIRSTNAME    LIKE CONCAT('%', #{searchKeyword}, '%')
			OR U.EMAIL        LIKE CONCAT('%', #{searchKeyword}, '%')
			OR J.JOB_NAME_${language.code} LIKE CONCAT('%', #{searchKeyword}, '%')
		)
		</if>

		
	</sql>

	<select id="getMessageCount" parameterType="map" resultType="int">
		/* message.getMessageCount : 메시지 카운트 조회 */
		SELECT
			COUNT(*)
		<include refid="fromMessage"/>
		<include refid="whereMessage"/>
	</select>

	<select id="getMessageList" parameterType="map" resultType="com.iscreammedia.clic.front.domain.Message">
		/* message.getMessageList : 메시지 목록 조회 */
		SELECT
			M.MESSAGE_ID
			,M.MESSAGE_GROUP_ID
			,M.MESSAGE_CONTENTS
			,M.TRANS_DATE
			,CASE M.CREATOR WHEN F.USER_ID THEN 1 ELSE 0 END AS IS_FROM
		<include refid="fromMessage"/>
		<include refid="whereMessage"/>
		ORDER BY M.MESSAGE_ID DESC
		OFFSET ${offset} ROW
		FETCH NEXT ${limit} ROW ONLY
	</select>

	<sql id="fromMessage">
		FROM
			T_MESSAGE_GROUP MG
		LEFT JOIN
			T_MESSAGE_JOIN_USER MJU
				ON  MJU.MESSAGE_GROUP_ID = MG.MESSAGE_GROUP_ID
				AND MJU.IS_DEL = 'N'
		JOIN
			T_MESSAGE M
				ON  M.MESSAGE_GROUP_ID = MG.MESSAGE_GROUP_ID
		JOIN
			T_FRIEND F
				ON  F.FRIEND_ID = MJU.FRIEND_ID
				AND F.USER_ID = MJU.USER_ID
				AND F.FRIEND_STATUS_CODE = '1103'
	</sql>

	<sql id="whereMessage">
		WHERE
			MG.MESSAGE_GROUP_ID = #{messageGroupId}
		AND MG.IS_DEL = 'N'
		AND F.USER_ID = #{userId}
	</sql>

	<select id="confirmNewMessage" parameterType="map" resultType="boolean">
		/* message.confirmNewMessage : 신규 메시지 확인 */
		SELECT
			ISNULL(MAX(ISNULL(M.LAST_MESSAGE_ID, 0) > ISNULL(MJU.CONFIRMATION_MESSAGE_ID, 0)), 0) AS IS_CONFIRMATION
		FROM
			T_MESSAGE_JOIN_USER MJU
		LEFT JOIN
			T_MESSAGE_GROUP MG
				ON  MG.MESSAGE_GROUP_ID = MJU.MESSAGE_GROUP_ID
				AND MG.IS_DEL = 'N'
		LEFT JOIN (
			SELECT
				MESSAGE_GROUP_ID
				,MAX(MESSAGE_ID) AS LAST_MESSAGE_ID
			FROM
				T_MESSAGE
			GROUP BY MESSAGE_GROUP_ID
		) M
				ON  M.MESSAGE_GROUP_ID = MG.MESSAGE_GROUP_ID
		WHERE
			MJU.USER_ID = #{userId}
		AND MJU.IS_DEL = 'N'
	</select>
</mapper>